<?php #modified
set_include_path(get_include_path() . PATH_SEPARATOR . "/data/sylius/src/GGG/Bundle/ODataBundle/Composer/../../../../../vendor/xrowgmbh/OData_PHP_SDK/framework/");
$GLOBALS['ODataphp_path'] = "/data/sylius/src/GGG/Bundle/ODataBundle/Composer/../../../../../vendor/xrowgmbh/OData_PHP_SDK/framework/";

  /*
    Copyright 2010 Persistent Systems Limited

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
   */

    /**
    * This code was generated by the tool 'PHPDataSvcUtil.php'.
    * Runtime Version:1.0
    *
    * Changes to this file may cause incorrect behavior and will be lost if
    * the code is regenerated.
    */

    require_once 'Context/ObjectContext.php';
    /**
    * Defines default OData Service URL for this proxy class
    */
    define("DEFAULT_ODATA_SERVICE_URL", "http://services.odata.org/Northwind/Northwind.svc");
    
   /**
    * @class:Category
    * @type:EntityType
    * @key:CategoryID
    */
    class Category extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $CategoryID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $CategoryName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:Max
        * @FixedLength:false
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Binary
        */
        public $Picture;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Products_Categories
        * @FromRole:Categories
        * @ToRole:Products
        */
        public $Products;
    

       /**
        * Function to create an instance of Category
        * @param Edm.Int32 $CategoryID
        * @param Edm.String $CategoryName
        */
        public static function CreateCategory(
            $CategoryID, 
            $CategoryName)
        {   
            $Category = new Category();
            $Category->CategoryID = $CategoryID;
            $Category->CategoryName = $CategoryName;
            return $Category;
        }

       /**
        * Constructor for Category
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Products'] = 'Products';
            $this->Products = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:CustomerDemographic
    * @type:EntityType
    * @key:CustomerTypeID
    */
    class CustomerDemographic extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:10
        * @FixedLength:true
        */
        public $CustomerTypeID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:Max
        * @FixedLength:false
        */
        public $CustomerDesc;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:CustomerCustomerDemo
        * @FromRole:CustomerDemographics
        * @ToRole:Customers
        */
        public $Customers;
    

       /**
        * Function to create an instance of CustomerDemographic
        * @param Edm.String $CustomerTypeID
        */
        public static function CreateCustomerDemographic(
            $CustomerTypeID)
        {   
            $CustomerDemographic = new CustomerDemographic();
            $CustomerDemographic->CustomerTypeID = $CustomerTypeID;
            return $CustomerDemographic;
        }

       /**
        * Constructor for CustomerDemographic
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Customers'] = 'Customers';
            $this->Customers = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Customer
    * @type:EntityType
    * @key:CustomerID
    */
    class Customer extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:5
        * @FixedLength:true
        */
        public $CustomerID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $CompanyName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:30
        * @FixedLength:false
        */
        public $ContactName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:30
        * @FixedLength:false
        */
        public $ContactTitle;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:60
        * @FixedLength:false
        */
        public $Address;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $City;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $Region;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:10
        * @FixedLength:false
        */
        public $PostalCode;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $Country;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:24
        * @FixedLength:false
        */
        public $Phone;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:24
        * @FixedLength:false
        */
        public $Fax;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Orders_Customers
        * @FromRole:Customers
        * @ToRole:Orders
        */
        public $Orders;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:CustomerCustomerDemo
        * @FromRole:Customers
        * @ToRole:CustomerDemographics
        */
        public $CustomerDemographics;
    

       /**
        * Function to create an instance of Customer
        * @param Edm.String $CustomerID
        * @param Edm.String $CompanyName
        */
        public static function CreateCustomer(
            $CustomerID, 
            $CompanyName)
        {   
            $Customer = new Customer();
            $Customer->CustomerID = $CustomerID;
            $Customer->CompanyName = $CompanyName;
            return $Customer;
        }

       /**
        * Constructor for Customer
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Orders'] = 'Orders';
            $this->_entityMap['CustomerDemographics'] = 'CustomerDemographics';
            $this->Orders = array();
            $this->CustomerDemographics = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Employee
    * @type:EntityType
    * @key:EmployeeID
    */
    class Employee extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $EmployeeID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:20
        * @FixedLength:false
        */
        public $LastName;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:10
        * @FixedLength:false
        */
        public $FirstName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:30
        * @FixedLength:false
        */
        public $Title;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:25
        * @FixedLength:false
        */
        public $TitleOfCourtesy;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $BirthDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $HireDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:60
        * @FixedLength:false
        */
        public $Address;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $City;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $Region;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:10
        * @FixedLength:false
        */
        public $PostalCode;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $Country;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:24
        * @FixedLength:false
        */
        public $HomePhone;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:4
        * @FixedLength:false
        */
        public $Extension;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Binary
        */
        public $Photo;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:Max
        * @FixedLength:false
        */
        public $Notes;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $ReportsTo;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:255
        * @FixedLength:false
        */
        public $PhotoPath;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Employees_Employees
        * @FromRole:Employees
        * @ToRole:Employees1
        */
        public $Employees1;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Employees_Employees
        * @FromRole:Employees1
        * @ToRole:Employees
        */
        public $Employee1;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Orders_Employees
        * @FromRole:Employees
        * @ToRole:Orders
        */
        public $Orders;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:EmployeeTerritories
        * @FromRole:Employees
        * @ToRole:Territories
        */
        public $Territories;
    

       /**
        * Function to create an instance of Employee
        * @param Edm.Int32 $EmployeeID
        * @param Edm.String $LastName
        * @param Edm.String $FirstName
        */
        public static function CreateEmployee(
            $EmployeeID, 
            $LastName, 
            $FirstName)
        {   
            $Employee = new Employee();
            $Employee->EmployeeID = $EmployeeID;
            $Employee->LastName = $LastName;
            $Employee->FirstName = $FirstName;
            return $Employee;
        }

       /**
        * Constructor for Employee
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Employees1'] = 'Employees1';
            $this->_entityMap['Employee1'] = 'Employees';
            $this->_entityMap['Orders'] = 'Orders';
            $this->_entityMap['Territories'] = 'Territories';
            $this->Employees1 = array();
            $this->Employee1 = array();
            $this->Orders = array();
            $this->Territories = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Order_Detail
    * @type:EntityType
    * @key:OrderID
    * @key:ProductID
    */
    class Order_Detail extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OrderID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ProductID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Decimal
        */
        public $UnitPrice;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int16
        */
        public $Quantity;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Single
        */
        public $Discount;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Order_Details_Orders
        * @FromRole:Order_Details
        * @ToRole:Orders
        */
        public $Order;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Order_Details_Products
        * @FromRole:Order_Details
        * @ToRole:Products
        */
        public $Product;
    

       /**
        * Function to create an instance of Order_Detail
        * @param Edm.Int32 $OrderID
        * @param Edm.Int32 $ProductID
        * @param Edm.Decimal $UnitPrice
        * @param Edm.Int16 $Quantity
        * @param Edm.Single $Discount
        */
        public static function CreateOrder_Detail(
            $OrderID, 
            $ProductID, 
            $UnitPrice, 
            $Quantity, 
            $Discount)
        {   
            $Order_Detail = new Order_Detail();
            $Order_Detail->OrderID = $OrderID;
            $Order_Detail->ProductID = $ProductID;
            $Order_Detail->UnitPrice = $UnitPrice;
            $Order_Detail->Quantity = $Quantity;
            $Order_Detail->Discount = $Discount;
            return $Order_Detail;
        }

       /**
        * Constructor for Order_Detail
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Order'] = 'Orders';
            $this->_entityMap['Product'] = 'Products';
            $this->Order = array();
            $this->Product = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Order
    * @type:EntityType
    * @key:OrderID
    */
    class Order extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OrderID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:5
        * @FixedLength:true
        */
        public $CustomerID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $EmployeeID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $OrderDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $RequiredDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $ShippedDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $ShipVia;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $Freight;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $ShipName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:60
        * @FixedLength:false
        */
        public $ShipAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $ShipCity;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $ShipRegion;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:10
        * @FixedLength:false
        */
        public $ShipPostalCode;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $ShipCountry;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Orders_Customers
        * @FromRole:Orders
        * @ToRole:Customers
        */
        public $Customer;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Orders_Employees
        * @FromRole:Orders
        * @ToRole:Employees
        */
        public $Employee;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Order_Details_Orders
        * @FromRole:Orders
        * @ToRole:Order_Details
        */
        public $Order_Details;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Orders_Shippers
        * @FromRole:Orders
        * @ToRole:Shippers
        */
        public $Shipper;
    

       /**
        * Function to create an instance of Order
        * @param Edm.Int32 $OrderID
        */
        public static function CreateOrder(
            $OrderID)
        {   
            $Order = new Order();
            $Order->OrderID = $OrderID;
            return $Order;
        }

       /**
        * Constructor for Order
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Customer'] = 'Customers';
            $this->_entityMap['Employee'] = 'Employees';
            $this->_entityMap['Order_Details'] = 'Order_Details';
            $this->_entityMap['Shipper'] = 'Shippers';
            $this->Customer = array();
            $this->Employee = array();
            $this->Order_Details = array();
            $this->Shipper = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Product
    * @type:EntityType
    * @key:ProductID
    */
    class Product extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ProductID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $ProductName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $SupplierID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $CategoryID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:20
        * @FixedLength:false
        */
        public $QuantityPerUnit;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $UnitPrice;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int16
        */
        public $UnitsInStock;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int16
        */
        public $UnitsOnOrder;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int16
        */
        public $ReorderLevel;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $Discontinued;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Products_Categories
        * @FromRole:Products
        * @ToRole:Categories
        */
        public $Category;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Order_Details_Products
        * @FromRole:Products
        * @ToRole:Order_Details
        */
        public $Order_Details;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Products_Suppliers
        * @FromRole:Products
        * @ToRole:Suppliers
        */
        public $Supplier;
    

       /**
        * Function to create an instance of Product
        * @param Edm.Int32 $ProductID
        * @param Edm.String $ProductName
        * @param Edm.Boolean $Discontinued
        */
        public static function CreateProduct(
            $ProductID, 
            $ProductName, 
            $Discontinued)
        {   
            $Product = new Product();
            $Product->ProductID = $ProductID;
            $Product->ProductName = $ProductName;
            $Product->Discontinued = $Discontinued;
            return $Product;
        }

       /**
        * Constructor for Product
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Category'] = 'Categories';
            $this->_entityMap['Order_Details'] = 'Order_Details';
            $this->_entityMap['Supplier'] = 'Suppliers';
            $this->Category = array();
            $this->Order_Details = array();
            $this->Supplier = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Region
    * @type:EntityType
    * @key:RegionID
    */
    class Region extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $RegionID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:50
        * @FixedLength:true
        */
        public $RegionDescription;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Territories_Region
        * @FromRole:Region
        * @ToRole:Territories
        */
        public $Territories;
    

       /**
        * Function to create an instance of Region
        * @param Edm.Int32 $RegionID
        * @param Edm.String $RegionDescription
        */
        public static function CreateRegion(
            $RegionID, 
            $RegionDescription)
        {   
            $Region = new Region();
            $Region->RegionID = $RegionID;
            $Region->RegionDescription = $RegionDescription;
            return $Region;
        }

       /**
        * Constructor for Region
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Territories'] = 'Territories';
            $this->Territories = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Shipper
    * @type:EntityType
    * @key:ShipperID
    */
    class Shipper extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ShipperID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $CompanyName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:24
        * @FixedLength:false
        */
        public $Phone;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Orders_Shippers
        * @FromRole:Shippers
        * @ToRole:Orders
        */
        public $Orders;
    

       /**
        * Function to create an instance of Shipper
        * @param Edm.Int32 $ShipperID
        * @param Edm.String $CompanyName
        */
        public static function CreateShipper(
            $ShipperID, 
            $CompanyName)
        {   
            $Shipper = new Shipper();
            $Shipper->ShipperID = $ShipperID;
            $Shipper->CompanyName = $CompanyName;
            return $Shipper;
        }

       /**
        * Constructor for Shipper
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Orders'] = 'Orders';
            $this->Orders = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Supplier
    * @type:EntityType
    * @key:SupplierID
    */
    class Supplier extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $SupplierID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $CompanyName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:30
        * @FixedLength:false
        */
        public $ContactName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:30
        * @FixedLength:false
        */
        public $ContactTitle;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:60
        * @FixedLength:false
        */
        public $Address;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $City;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $Region;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:10
        * @FixedLength:false
        */
        public $PostalCode;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $Country;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:24
        * @FixedLength:false
        */
        public $Phone;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:24
        * @FixedLength:false
        */
        public $Fax;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:Max
        * @FixedLength:false
        */
        public $HomePage;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Products_Suppliers
        * @FromRole:Suppliers
        * @ToRole:Products
        */
        public $Products;
    

       /**
        * Function to create an instance of Supplier
        * @param Edm.Int32 $SupplierID
        * @param Edm.String $CompanyName
        */
        public static function CreateSupplier(
            $SupplierID, 
            $CompanyName)
        {   
            $Supplier = new Supplier();
            $Supplier->SupplierID = $SupplierID;
            $Supplier->CompanyName = $CompanyName;
            return $Supplier;
        }

       /**
        * Constructor for Supplier
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Products'] = 'Products';
            $this->Products = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Territory
    * @type:EntityType
    * @key:TerritoryID
    */
    class Territory extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:20
        * @FixedLength:false
        */
        public $TerritoryID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:50
        * @FixedLength:true
        */
        public $TerritoryDescription;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $RegionID;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:FK_Territories_Region
        * @FromRole:Territories
        * @ToRole:Region
        */
        public $Region;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:EmployeeTerritories
        * @FromRole:Territories
        * @ToRole:Employees
        */
        public $Employees;
    

       /**
        * Function to create an instance of Territory
        * @param Edm.String $TerritoryID
        * @param Edm.String $TerritoryDescription
        * @param Edm.Int32 $RegionID
        */
        public static function CreateTerritory(
            $TerritoryID, 
            $TerritoryDescription, 
            $RegionID)
        {   
            $Territory = new Territory();
            $Territory->TerritoryID = $TerritoryID;
            $Territory->TerritoryDescription = $TerritoryDescription;
            $Territory->RegionID = $RegionID;
            return $Territory;
        }

       /**
        * Constructor for Territory
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Region'] = 'Region';
            $this->_entityMap['Employees'] = 'Employees';
            $this->Region = array();
            $this->Employees = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Alphabetical_list_of_product
    * @type:EntityType
    * @key:CategoryName
    * @key:Discontinued
    * @key:ProductID
    * @key:ProductName
    */
    class Alphabetical_list_of_product extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ProductID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $ProductName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $SupplierID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $CategoryID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:20
        * @FixedLength:false
        */
        public $QuantityPerUnit;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $UnitPrice;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int16
        */
        public $UnitsInStock;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int16
        */
        public $UnitsOnOrder;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int16
        */
        public $ReorderLevel;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $Discontinued;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $CategoryName;
    

       /**
        * Function to create an instance of Alphabetical_list_of_product
        * @param Edm.Int32 $ProductID
        * @param Edm.String $ProductName
        * @param Edm.Boolean $Discontinued
        * @param Edm.String $CategoryName
        */
        public static function CreateAlphabetical_list_of_product(
            $ProductID, 
            $ProductName, 
            $Discontinued, 
            $CategoryName)
        {   
            $Alphabetical_list_of_product = new Alphabetical_list_of_product();
            $Alphabetical_list_of_product->ProductID = $ProductID;
            $Alphabetical_list_of_product->ProductName = $ProductName;
            $Alphabetical_list_of_product->Discontinued = $Discontinued;
            $Alphabetical_list_of_product->CategoryName = $CategoryName;
            return $Alphabetical_list_of_product;
        }

       /**
        * Constructor for Alphabetical_list_of_product
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Category_Sales_for_1997
    * @type:EntityType
    * @key:CategoryName
    */
    class Category_Sales_for_1997 extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $CategoryName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $CategorySales;
    

       /**
        * Function to create an instance of Category_Sales_for_1997
        * @param Edm.String $CategoryName
        */
        public static function CreateCategory_Sales_for_1997(
            $CategoryName)
        {   
            $Category_Sales_for_1997 = new Category_Sales_for_1997();
            $Category_Sales_for_1997->CategoryName = $CategoryName;
            return $Category_Sales_for_1997;
        }

       /**
        * Constructor for Category_Sales_for_1997
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Current_Product_List
    * @type:EntityType
    * @key:ProductID
    * @key:ProductName
    */
    class Current_Product_List extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ProductID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $ProductName;
    

       /**
        * Function to create an instance of Current_Product_List
        * @param Edm.Int32 $ProductID
        * @param Edm.String $ProductName
        */
        public static function CreateCurrent_Product_List(
            $ProductID, 
            $ProductName)
        {   
            $Current_Product_List = new Current_Product_List();
            $Current_Product_List->ProductID = $ProductID;
            $Current_Product_List->ProductName = $ProductName;
            return $Current_Product_List;
        }

       /**
        * Constructor for Current_Product_List
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Customer_and_Suppliers_by_City
    * @type:EntityType
    * @key:CompanyName
    * @key:Relationship
    */
    class Customer_and_Suppliers_by_City extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $City;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $CompanyName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:30
        * @FixedLength:false
        */
        public $ContactName;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:9
        * @FixedLength:false
        */
        public $Relationship;
    

       /**
        * Function to create an instance of Customer_and_Suppliers_by_City
        * @param Edm.String $CompanyName
        * @param Edm.String $Relationship
        */
        public static function CreateCustomer_and_Suppliers_by_City(
            $CompanyName, 
            $Relationship)
        {   
            $Customer_and_Suppliers_by_City = new Customer_and_Suppliers_by_City();
            $Customer_and_Suppliers_by_City->CompanyName = $CompanyName;
            $Customer_and_Suppliers_by_City->Relationship = $Relationship;
            return $Customer_and_Suppliers_by_City;
        }

       /**
        * Constructor for Customer_and_Suppliers_by_City
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Invoice
    * @type:EntityType
    * @key:CustomerName
    * @key:Discount
    * @key:OrderID
    * @key:ProductID
    * @key:ProductName
    * @key:Quantity
    * @key:Salesperson
    * @key:ShipperName
    * @key:UnitPrice
    */
    class Invoice extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $ShipName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:60
        * @FixedLength:false
        */
        public $ShipAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $ShipCity;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $ShipRegion;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:10
        * @FixedLength:false
        */
        public $ShipPostalCode;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $ShipCountry;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:5
        * @FixedLength:true
        */
        public $CustomerID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $CustomerName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:60
        * @FixedLength:false
        */
        public $Address;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $City;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $Region;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:10
        * @FixedLength:false
        */
        public $PostalCode;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $Country;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:31
        * @FixedLength:false
        */
        public $Salesperson;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OrderID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $OrderDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $RequiredDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $ShippedDate;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $ShipperName;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ProductID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $ProductName;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Decimal
        */
        public $UnitPrice;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int16
        */
        public $Quantity;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Single
        */
        public $Discount;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $ExtendedPrice;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $Freight;
    

       /**
        * Function to create an instance of Invoice
        * @param Edm.String $CustomerName
        * @param Edm.String $Salesperson
        * @param Edm.Int32 $OrderID
        * @param Edm.String $ShipperName
        * @param Edm.Int32 $ProductID
        * @param Edm.String $ProductName
        * @param Edm.Decimal $UnitPrice
        * @param Edm.Int16 $Quantity
        * @param Edm.Single $Discount
        */
        public static function CreateInvoice(
            $CustomerName, 
            $Salesperson, 
            $OrderID, 
            $ShipperName, 
            $ProductID, 
            $ProductName, 
            $UnitPrice, 
            $Quantity, 
            $Discount)
        {   
            $Invoice = new Invoice();
            $Invoice->CustomerName = $CustomerName;
            $Invoice->Salesperson = $Salesperson;
            $Invoice->OrderID = $OrderID;
            $Invoice->ShipperName = $ShipperName;
            $Invoice->ProductID = $ProductID;
            $Invoice->ProductName = $ProductName;
            $Invoice->UnitPrice = $UnitPrice;
            $Invoice->Quantity = $Quantity;
            $Invoice->Discount = $Discount;
            return $Invoice;
        }

       /**
        * Constructor for Invoice
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Order_Details_Extended
    * @type:EntityType
    * @key:Discount
    * @key:OrderID
    * @key:ProductID
    * @key:ProductName
    * @key:Quantity
    * @key:UnitPrice
    */
    class Order_Details_Extended extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OrderID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ProductID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $ProductName;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Decimal
        */
        public $UnitPrice;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int16
        */
        public $Quantity;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Single
        */
        public $Discount;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $ExtendedPrice;
    

       /**
        * Function to create an instance of Order_Details_Extended
        * @param Edm.Int32 $OrderID
        * @param Edm.Int32 $ProductID
        * @param Edm.String $ProductName
        * @param Edm.Decimal $UnitPrice
        * @param Edm.Int16 $Quantity
        * @param Edm.Single $Discount
        */
        public static function CreateOrder_Details_Extended(
            $OrderID, 
            $ProductID, 
            $ProductName, 
            $UnitPrice, 
            $Quantity, 
            $Discount)
        {   
            $Order_Details_Extended = new Order_Details_Extended();
            $Order_Details_Extended->OrderID = $OrderID;
            $Order_Details_Extended->ProductID = $ProductID;
            $Order_Details_Extended->ProductName = $ProductName;
            $Order_Details_Extended->UnitPrice = $UnitPrice;
            $Order_Details_Extended->Quantity = $Quantity;
            $Order_Details_Extended->Discount = $Discount;
            return $Order_Details_Extended;
        }

       /**
        * Constructor for Order_Details_Extended
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Order_Subtotal
    * @type:EntityType
    * @key:OrderID
    */
    class Order_Subtotal extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OrderID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $Subtotal;
    

       /**
        * Function to create an instance of Order_Subtotal
        * @param Edm.Int32 $OrderID
        */
        public static function CreateOrder_Subtotal(
            $OrderID)
        {   
            $Order_Subtotal = new Order_Subtotal();
            $Order_Subtotal->OrderID = $OrderID;
            return $Order_Subtotal;
        }

       /**
        * Constructor for Order_Subtotal
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Orders_Qry
    * @type:EntityType
    * @key:CompanyName
    * @key:OrderID
    */
    class Orders_Qry extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OrderID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:5
        * @FixedLength:true
        */
        public $CustomerID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $EmployeeID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $OrderDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $RequiredDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $ShippedDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $ShipVia;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $Freight;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $ShipName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:60
        * @FixedLength:false
        */
        public $ShipAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $ShipCity;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $ShipRegion;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:10
        * @FixedLength:false
        */
        public $ShipPostalCode;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $ShipCountry;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $CompanyName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:60
        * @FixedLength:false
        */
        public $Address;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $City;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $Region;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:10
        * @FixedLength:false
        */
        public $PostalCode;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $Country;
    

       /**
        * Function to create an instance of Orders_Qry
        * @param Edm.Int32 $OrderID
        * @param Edm.String $CompanyName
        */
        public static function CreateOrders_Qry(
            $OrderID, 
            $CompanyName)
        {   
            $Orders_Qry = new Orders_Qry();
            $Orders_Qry->OrderID = $OrderID;
            $Orders_Qry->CompanyName = $CompanyName;
            return $Orders_Qry;
        }

       /**
        * Constructor for Orders_Qry
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Product_Sales_for_1997
    * @type:EntityType
    * @key:CategoryName
    * @key:ProductName
    */
    class Product_Sales_for_1997 extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $CategoryName;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $ProductName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $ProductSales;
    

       /**
        * Function to create an instance of Product_Sales_for_1997
        * @param Edm.String $CategoryName
        * @param Edm.String $ProductName
        */
        public static function CreateProduct_Sales_for_1997(
            $CategoryName, 
            $ProductName)
        {   
            $Product_Sales_for_1997 = new Product_Sales_for_1997();
            $Product_Sales_for_1997->CategoryName = $CategoryName;
            $Product_Sales_for_1997->ProductName = $ProductName;
            return $Product_Sales_for_1997;
        }

       /**
        * Constructor for Product_Sales_for_1997
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Products_Above_Average_Price
    * @type:EntityType
    * @key:ProductName
    */
    class Products_Above_Average_Price extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $ProductName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $UnitPrice;
    

       /**
        * Function to create an instance of Products_Above_Average_Price
        * @param Edm.String $ProductName
        */
        public static function CreateProducts_Above_Average_Price(
            $ProductName)
        {   
            $Products_Above_Average_Price = new Products_Above_Average_Price();
            $Products_Above_Average_Price->ProductName = $ProductName;
            return $Products_Above_Average_Price;
        }

       /**
        * Constructor for Products_Above_Average_Price
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Products_by_Category
    * @type:EntityType
    * @key:CategoryName
    * @key:Discontinued
    * @key:ProductName
    */
    class Products_by_Category extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $CategoryName;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $ProductName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:20
        * @FixedLength:false
        */
        public $QuantityPerUnit;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int16
        */
        public $UnitsInStock;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $Discontinued;
    

       /**
        * Function to create an instance of Products_by_Category
        * @param Edm.String $CategoryName
        * @param Edm.String $ProductName
        * @param Edm.Boolean $Discontinued
        */
        public static function CreateProducts_by_Category(
            $CategoryName, 
            $ProductName, 
            $Discontinued)
        {   
            $Products_by_Category = new Products_by_Category();
            $Products_by_Category->CategoryName = $CategoryName;
            $Products_by_Category->ProductName = $ProductName;
            $Products_by_Category->Discontinued = $Discontinued;
            return $Products_by_Category;
        }

       /**
        * Constructor for Products_by_Category
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Sales_by_Category
    * @type:EntityType
    * @key:CategoryID
    * @key:CategoryName
    * @key:ProductName
    */
    class Sales_by_Category extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $CategoryID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:15
        * @FixedLength:false
        */
        public $CategoryName;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $ProductName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $ProductSales;
    

       /**
        * Function to create an instance of Sales_by_Category
        * @param Edm.Int32 $CategoryID
        * @param Edm.String $CategoryName
        * @param Edm.String $ProductName
        */
        public static function CreateSales_by_Category(
            $CategoryID, 
            $CategoryName, 
            $ProductName)
        {   
            $Sales_by_Category = new Sales_by_Category();
            $Sales_by_Category->CategoryID = $CategoryID;
            $Sales_by_Category->CategoryName = $CategoryName;
            $Sales_by_Category->ProductName = $ProductName;
            return $Sales_by_Category;
        }

       /**
        * Constructor for Sales_by_Category
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Sales_Totals_by_Amount
    * @type:EntityType
    * @key:CompanyName
    * @key:OrderID
    */
    class Sales_Totals_by_Amount extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $SaleAmount;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OrderID;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:40
        * @FixedLength:false
        */
        public $CompanyName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $ShippedDate;
    

       /**
        * Function to create an instance of Sales_Totals_by_Amount
        * @param Edm.Int32 $OrderID
        * @param Edm.String $CompanyName
        */
        public static function CreateSales_Totals_by_Amount(
            $OrderID, 
            $CompanyName)
        {   
            $Sales_Totals_by_Amount = new Sales_Totals_by_Amount();
            $Sales_Totals_by_Amount->OrderID = $OrderID;
            $Sales_Totals_by_Amount->CompanyName = $CompanyName;
            return $Sales_Totals_by_Amount;
        }

       /**
        * Constructor for Sales_Totals_by_Amount
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Summary_of_Sales_by_Quarter
    * @type:EntityType
    * @key:OrderID
    */
    class Summary_of_Sales_by_Quarter extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $ShippedDate;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OrderID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $Subtotal;
    

       /**
        * Function to create an instance of Summary_of_Sales_by_Quarter
        * @param Edm.Int32 $OrderID
        */
        public static function CreateSummary_of_Sales_by_Quarter(
            $OrderID)
        {   
            $Summary_of_Sales_by_Quarter = new Summary_of_Sales_by_Quarter();
            $Summary_of_Sales_by_Quarter->OrderID = $OrderID;
            return $Summary_of_Sales_by_Quarter;
        }

       /**
        * Constructor for Summary_of_Sales_by_Quarter
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Summary_of_Sales_by_Year
    * @type:EntityType
    * @key:OrderID
    */
    class Summary_of_Sales_by_Year extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $ShippedDate;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OrderID;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Decimal
        */
        public $Subtotal;
    

       /**
        * Function to create an instance of Summary_of_Sales_by_Year
        * @param Edm.Int32 $OrderID
        */
        public static function CreateSummary_of_Sales_by_Year(
            $OrderID)
        {   
            $Summary_of_Sales_by_Year = new Summary_of_Sales_by_Year();
            $Summary_of_Sales_by_Year->OrderID = $OrderID;
            return $Summary_of_Sales_by_Year;
        }

       /**
        * Constructor for Summary_of_Sales_by_Year
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * Container class NorthwindEntities, Namespace: NorthwindModel
    */
    class NorthwindEntities extends ObjectContext
    {
    
        protected $_Categories;
        protected $_CustomerDemographics;
        protected $_Customers;
        protected $_Employees;
        protected $_Order_Details;
        protected $_Orders;
        protected $_Products;
        protected $_Regions;
        protected $_Shippers;
        protected $_Suppliers;
        protected $_Territories;
        protected $_Alphabetical_list_of_products;
        protected $_Category_Sales_for_1997;
        protected $_Current_Product_Lists;
        protected $_Customer_and_Suppliers_by_Cities;
        protected $_Invoices;
        protected $_Order_Details_Extendeds;
        protected $_Order_Subtotals;
        protected $_Orders_Qries;
        protected $_Product_Sales_for_1997;
        protected $_Products_Above_Average_Prices;
        protected $_Products_by_Categories;
        protected $_Sales_by_Categories;
        protected $_Sales_Totals_by_Amounts;
        protected $_Summary_of_Sales_by_Quarters;
        protected $_Summary_of_Sales_by_Years;
        
       /**
        * The constructor for NorthwindEntities accepting service URI
        */
        public function __construct($uri = "")
        {
            if(strlen($uri) == 0)
            {
                $uri = DEFAULT_ODATA_SERVICE_URL;
            }

            if (Utility::reverseFind($uri, '/') != strlen($uri) - 1)
            {
                $uri = $uri . '/';
            }

            $this->_baseURI = $uri;
            parent::__construct($this->_baseURI);
            $this->_entities = array(
                                "Categories",
                                "CustomerDemographics",
                                "Customers",
                                "Employees",
                                "Order_Details",
                                "Orders",
                                "Products",
                                "Regions",
                                "Shippers",
                                "Suppliers",
                                "Territories",
                                "Alphabetical_list_of_products",
                                "Category_Sales_for_1997",
                                "Current_Product_Lists",
                                "Customer_and_Suppliers_by_Cities",
                                "Invoices",
                                "Order_Details_Extendeds",
                                "Order_Subtotals",
                                "Orders_Qries",
                                "Product_Sales_for_1997",
                                "Products_Above_Average_Prices",
                                "Products_by_Categories",
                                "Sales_by_Categories",
                                "Sales_Totals_by_Amounts",
                                "Summary_of_Sales_by_Quarters",
                                "Summary_of_Sales_by_Years");
            $this->_entitySet2Type = array(
                                            "categories" => "Category", 
                                            "customerdemographics" => "CustomerDemographic", 
                                            "customers" => "Customer", 
                                            "employees" => "Employee", 
                                            "order_details" => "Order_Detail", 
                                            "orders" => "Order", 
                                            "products" => "Product", 
                                            "regions" => "Region", 
                                            "shippers" => "Shipper", 
                                            "suppliers" => "Supplier", 
                                            "territories" => "Territory", 
                                            "alphabetical_list_of_products" => "Alphabetical_list_of_product", 
                                            "category_sales_for_1997" => "Category_Sales_for_1997", 
                                            "current_product_lists" => "Current_Product_List", 
                                            "customer_and_suppliers_by_cities" => "Customer_and_Suppliers_by_City", 
                                            "invoices" => "Invoice", 
                                            "order_details_extendeds" => "Order_Details_Extended", 
                                            "order_subtotals" => "Order_Subtotal", 
                                            "orders_qries" => "Orders_Qry", 
                                            "product_sales_for_1997" => "Product_Sales_for_1997", 
                                            "products_above_average_prices" => "Products_Above_Average_Price", 
                                            "products_by_categories" => "Products_by_Category", 
                                            "sales_by_categories" => "Sales_by_Category", 
                                            "sales_totals_by_amounts" => "Sales_Totals_by_Amount", 
                                            "summary_of_sales_by_quarters" => "Summary_of_Sales_by_Quarter", 
                                            "summary_of_sales_by_years" => "Summary_of_Sales_by_Year");
            $this->_entityType2Set = array(
                                            "category" => "Categories", 
                                            "customerdemographic" => "CustomerDemographics", 
                                            "customer" => "Customers", 
                                            "employee" => "Employees", 
                                            "order_detail" => "Order_Details", 
                                            "order" => "Orders", 
                                            "product" => "Products", 
                                            "region" => "Regions", 
                                            "shipper" => "Shippers", 
                                            "supplier" => "Suppliers", 
                                            "territory" => "Territories", 
                                            "alphabetical_list_of_product" => "Alphabetical_list_of_products", 
                                            "category_sales_for_1997" => "Category_Sales_for_1997", 
                                            "current_product_list" => "Current_Product_Lists", 
                                            "customer_and_suppliers_by_city" => "Customer_and_Suppliers_by_Cities", 
                                            "invoice" => "Invoices", 
                                            "order_details_extended" => "Order_Details_Extendeds", 
                                            "order_subtotal" => "Order_Subtotals", 
                                            "orders_qry" => "Orders_Qries", 
                                            "product_sales_for_1997" => "Product_Sales_for_1997", 
                                            "products_above_average_price" => "Products_Above_Average_Prices", 
                                            "products_by_category" => "Products_by_Categories", 
                                            "sales_by_category" => "Sales_by_Categories", 
                                            "sales_totals_by_amount" => "Sales_Totals_by_Amounts", 
                                            "summary_of_sales_by_quarter" => "Summary_of_Sales_by_Quarters", 
                                            "summary_of_sales_by_year" => "Summary_of_Sales_by_Years");

            $this->_association = array();

    
            $this->_Categories = new DataServiceQuery('/'.'Categories', $this);
            $this->_CustomerDemographics = new DataServiceQuery('/'.'CustomerDemographics', $this);
            $this->_Customers = new DataServiceQuery('/'.'Customers', $this);
            $this->_Employees = new DataServiceQuery('/'.'Employees', $this);
            $this->_Order_Details = new DataServiceQuery('/'.'Order_Details', $this);
            $this->_Orders = new DataServiceQuery('/'.'Orders', $this);
            $this->_Products = new DataServiceQuery('/'.'Products', $this);
            $this->_Regions = new DataServiceQuery('/'.'Regions', $this);
            $this->_Shippers = new DataServiceQuery('/'.'Shippers', $this);
            $this->_Suppliers = new DataServiceQuery('/'.'Suppliers', $this);
            $this->_Territories = new DataServiceQuery('/'.'Territories', $this);
            $this->_Alphabetical_list_of_products = new DataServiceQuery('/'.'Alphabetical_list_of_products', $this);
            $this->_Category_Sales_for_1997 = new DataServiceQuery('/'.'Category_Sales_for_1997', $this);
            $this->_Current_Product_Lists = new DataServiceQuery('/'.'Current_Product_Lists', $this);
            $this->_Customer_and_Suppliers_by_Cities = new DataServiceQuery('/'.'Customer_and_Suppliers_by_Cities', $this);
            $this->_Invoices = new DataServiceQuery('/'.'Invoices', $this);
            $this->_Order_Details_Extendeds = new DataServiceQuery('/'.'Order_Details_Extendeds', $this);
            $this->_Order_Subtotals = new DataServiceQuery('/'.'Order_Subtotals', $this);
            $this->_Orders_Qries = new DataServiceQuery('/'.'Orders_Qries', $this);
            $this->_Product_Sales_for_1997 = new DataServiceQuery('/'.'Product_Sales_for_1997', $this);
            $this->_Products_Above_Average_Prices = new DataServiceQuery('/'.'Products_Above_Average_Prices', $this);
            $this->_Products_by_Categories = new DataServiceQuery('/'.'Products_by_Categories', $this);
            $this->_Sales_by_Categories = new DataServiceQuery('/'.'Sales_by_Categories', $this);
            $this->_Sales_Totals_by_Amounts = new DataServiceQuery('/'.'Sales_Totals_by_Amounts', $this);
            $this->_Summary_of_Sales_by_Quarters = new DataServiceQuery('/'.'Summary_of_Sales_by_Quarters', $this);
            $this->_Summary_of_Sales_by_Years = new DataServiceQuery('/'.'Summary_of_Sales_by_Years', $this);

        }

    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Categories
         * @return DataServiceQuery
         */
        public function Categories()
        {
            $this->_Categories->ClearAllOptions();
            return $this->_Categories;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset CustomerDemographics
         * @return DataServiceQuery
         */
        public function CustomerDemographics()
        {
            $this->_CustomerDemographics->ClearAllOptions();
            return $this->_CustomerDemographics;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Customers
         * @return DataServiceQuery
         */
        public function Customers()
        {
            $this->_Customers->ClearAllOptions();
            return $this->_Customers;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Employees
         * @return DataServiceQuery
         */
        public function Employees()
        {
            $this->_Employees->ClearAllOptions();
            return $this->_Employees;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Order_Details
         * @return DataServiceQuery
         */
        public function Order_Details()
        {
            $this->_Order_Details->ClearAllOptions();
            return $this->_Order_Details;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Orders
         * @return DataServiceQuery
         */
        public function Orders()
        {
            $this->_Orders->ClearAllOptions();
            return $this->_Orders;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Products
         * @return DataServiceQuery
         */
        public function Products()
        {
            $this->_Products->ClearAllOptions();
            return $this->_Products;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Regions
         * @return DataServiceQuery
         */
        public function Regions()
        {
            $this->_Regions->ClearAllOptions();
            return $this->_Regions;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Shippers
         * @return DataServiceQuery
         */
        public function Shippers()
        {
            $this->_Shippers->ClearAllOptions();
            return $this->_Shippers;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Suppliers
         * @return DataServiceQuery
         */
        public function Suppliers()
        {
            $this->_Suppliers->ClearAllOptions();
            return $this->_Suppliers;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Territories
         * @return DataServiceQuery
         */
        public function Territories()
        {
            $this->_Territories->ClearAllOptions();
            return $this->_Territories;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Alphabetical_list_of_products
         * @return DataServiceQuery
         */
        public function Alphabetical_list_of_products()
        {
            $this->_Alphabetical_list_of_products->ClearAllOptions();
            return $this->_Alphabetical_list_of_products;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Category_Sales_for_1997
         * @return DataServiceQuery
         */
        public function Category_Sales_for_1997()
        {
            $this->_Category_Sales_for_1997->ClearAllOptions();
            return $this->_Category_Sales_for_1997;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Current_Product_Lists
         * @return DataServiceQuery
         */
        public function Current_Product_Lists()
        {
            $this->_Current_Product_Lists->ClearAllOptions();
            return $this->_Current_Product_Lists;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Customer_and_Suppliers_by_Cities
         * @return DataServiceQuery
         */
        public function Customer_and_Suppliers_by_Cities()
        {
            $this->_Customer_and_Suppliers_by_Cities->ClearAllOptions();
            return $this->_Customer_and_Suppliers_by_Cities;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Invoices
         * @return DataServiceQuery
         */
        public function Invoices()
        {
            $this->_Invoices->ClearAllOptions();
            return $this->_Invoices;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Order_Details_Extendeds
         * @return DataServiceQuery
         */
        public function Order_Details_Extendeds()
        {
            $this->_Order_Details_Extendeds->ClearAllOptions();
            return $this->_Order_Details_Extendeds;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Order_Subtotals
         * @return DataServiceQuery
         */
        public function Order_Subtotals()
        {
            $this->_Order_Subtotals->ClearAllOptions();
            return $this->_Order_Subtotals;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Orders_Qries
         * @return DataServiceQuery
         */
        public function Orders_Qries()
        {
            $this->_Orders_Qries->ClearAllOptions();
            return $this->_Orders_Qries;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Product_Sales_for_1997
         * @return DataServiceQuery
         */
        public function Product_Sales_for_1997()
        {
            $this->_Product_Sales_for_1997->ClearAllOptions();
            return $this->_Product_Sales_for_1997;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Products_Above_Average_Prices
         * @return DataServiceQuery
         */
        public function Products_Above_Average_Prices()
        {
            $this->_Products_Above_Average_Prices->ClearAllOptions();
            return $this->_Products_Above_Average_Prices;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Products_by_Categories
         * @return DataServiceQuery
         */
        public function Products_by_Categories()
        {
            $this->_Products_by_Categories->ClearAllOptions();
            return $this->_Products_by_Categories;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Sales_by_Categories
         * @return DataServiceQuery
         */
        public function Sales_by_Categories()
        {
            $this->_Sales_by_Categories->ClearAllOptions();
            return $this->_Sales_by_Categories;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Sales_Totals_by_Amounts
         * @return DataServiceQuery
         */
        public function Sales_Totals_by_Amounts()
        {
            $this->_Sales_Totals_by_Amounts->ClearAllOptions();
            return $this->_Sales_Totals_by_Amounts;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Summary_of_Sales_by_Quarters
         * @return DataServiceQuery
         */
        public function Summary_of_Sales_by_Quarters()
        {
            $this->_Summary_of_Sales_by_Quarters->ClearAllOptions();
            return $this->_Summary_of_Sales_by_Quarters;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Summary_of_Sales_by_Years
         * @return DataServiceQuery
         */
        public function Summary_of_Sales_by_Years()
        {
            $this->_Summary_of_Sales_by_Years->ClearAllOptions();
            return $this->_Summary_of_Sales_by_Years;
        }
    
       /**
        * Functions for adding object to the entityset/collection
        */
    
       /**
        * Add Categories
        * @param Categories $object
        */
      public function AddToCategories($object)
        {
            return parent::AddObject('Categories', $object);
        }
    
       /**
        * Add CustomerDemographics
        * @param CustomerDemographics $object
        */
      public function AddToCustomerDemographics($object)
        {
            return parent::AddObject('CustomerDemographics', $object);
        }
    
       /**
        * Add Customers
        * @param Customers $object
        */
      public function AddToCustomers($object)
        {
            return parent::AddObject('Customers', $object);
        }
    
       /**
        * Add Employees
        * @param Employees $object
        */
      public function AddToEmployees($object)
        {
            return parent::AddObject('Employees', $object);
        }
    
       /**
        * Add Order_Details
        * @param Order_Details $object
        */
      public function AddToOrder_Details($object)
        {
            return parent::AddObject('Order_Details', $object);
        }
    
       /**
        * Add Orders
        * @param Orders $object
        */
      public function AddToOrders($object)
        {
            return parent::AddObject('Orders', $object);
        }
    
       /**
        * Add Products
        * @param Products $object
        */
      public function AddToProducts($object)
        {
            return parent::AddObject('Products', $object);
        }
    
       /**
        * Add Regions
        * @param Regions $object
        */
      public function AddToRegions($object)
        {
            return parent::AddObject('Regions', $object);
        }
    
       /**
        * Add Shippers
        * @param Shippers $object
        */
      public function AddToShippers($object)
        {
            return parent::AddObject('Shippers', $object);
        }
    
       /**
        * Add Suppliers
        * @param Suppliers $object
        */
      public function AddToSuppliers($object)
        {
            return parent::AddObject('Suppliers', $object);
        }
    
       /**
        * Add Territories
        * @param Territories $object
        */
      public function AddToTerritories($object)
        {
            return parent::AddObject('Territories', $object);
        }
    
       /**
        * Add Alphabetical_list_of_products
        * @param Alphabetical_list_of_products $object
        */
      public function AddToAlphabetical_list_of_products($object)
        {
            return parent::AddObject('Alphabetical_list_of_products', $object);
        }
    
       /**
        * Add Category_Sales_for_1997
        * @param Category_Sales_for_1997 $object
        */
      public function AddToCategory_Sales_for_1997($object)
        {
            return parent::AddObject('Category_Sales_for_1997', $object);
        }
    
       /**
        * Add Current_Product_Lists
        * @param Current_Product_Lists $object
        */
      public function AddToCurrent_Product_Lists($object)
        {
            return parent::AddObject('Current_Product_Lists', $object);
        }
    
       /**
        * Add Customer_and_Suppliers_by_Cities
        * @param Customer_and_Suppliers_by_Cities $object
        */
      public function AddToCustomer_and_Suppliers_by_Cities($object)
        {
            return parent::AddObject('Customer_and_Suppliers_by_Cities', $object);
        }
    
       /**
        * Add Invoices
        * @param Invoices $object
        */
      public function AddToInvoices($object)
        {
            return parent::AddObject('Invoices', $object);
        }
    
       /**
        * Add Order_Details_Extendeds
        * @param Order_Details_Extendeds $object
        */
      public function AddToOrder_Details_Extendeds($object)
        {
            return parent::AddObject('Order_Details_Extendeds', $object);
        }
    
       /**
        * Add Order_Subtotals
        * @param Order_Subtotals $object
        */
      public function AddToOrder_Subtotals($object)
        {
            return parent::AddObject('Order_Subtotals', $object);
        }
    
       /**
        * Add Orders_Qries
        * @param Orders_Qries $object
        */
      public function AddToOrders_Qries($object)
        {
            return parent::AddObject('Orders_Qries', $object);
        }
    
       /**
        * Add Product_Sales_for_1997
        * @param Product_Sales_for_1997 $object
        */
      public function AddToProduct_Sales_for_1997($object)
        {
            return parent::AddObject('Product_Sales_for_1997', $object);
        }
    
       /**
        * Add Products_Above_Average_Prices
        * @param Products_Above_Average_Prices $object
        */
      public function AddToProducts_Above_Average_Prices($object)
        {
            return parent::AddObject('Products_Above_Average_Prices', $object);
        }
    
       /**
        * Add Products_by_Categories
        * @param Products_by_Categories $object
        */
      public function AddToProducts_by_Categories($object)
        {
            return parent::AddObject('Products_by_Categories', $object);
        }
    
       /**
        * Add Sales_by_Categories
        * @param Sales_by_Categories $object
        */
      public function AddToSales_by_Categories($object)
        {
            return parent::AddObject('Sales_by_Categories', $object);
        }
    
       /**
        * Add Sales_Totals_by_Amounts
        * @param Sales_Totals_by_Amounts $object
        */
      public function AddToSales_Totals_by_Amounts($object)
        {
            return parent::AddObject('Sales_Totals_by_Amounts', $object);
        }
    
       /**
        * Add Summary_of_Sales_by_Quarters
        * @param Summary_of_Sales_by_Quarters $object
        */
      public function AddToSummary_of_Sales_by_Quarters($object)
        {
            return parent::AddObject('Summary_of_Sales_by_Quarters', $object);
        }
    
       /**
        * Add Summary_of_Sales_by_Years
        * @param Summary_of_Sales_by_Years $object
        */
      public function AddToSummary_of_Sales_by_Years($object)
        {
            return parent::AddObject('Summary_of_Sales_by_Years', $object);
        }
    

       /**
        * This function returns the entities.
        */
        public function getEntities()
        {
            return $this->_entities;
        }
    }
  
?>
  